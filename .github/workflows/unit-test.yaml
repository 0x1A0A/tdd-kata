name: unit-test

on:
  workflow_dispatch:
  push:
    branches: main
    paths:
      - "**/src/**"

jobs:
  deno:
    name: typescript
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: esm
    steps:
      - uses: actions/checkout@v4

      - uses: denoland/setup-deno@v1
        with:
          deno-version: vx.x.x

      - name: lint
        run: deno lint

      - name: test
        run: deno test

  c:
    name: c c++
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: c
    steps:
      - uses: actions/checkout@v4

      - name: build
        run: cmake -S ./ -B build

      - run: cmake --build build

      - name: Run unit tests
        run: cd build && ctest

  rust:
    name: rust
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: rust
    steps:
      - uses: actions/checkout@v4

      - run: cargo test

  haskell:
    name: haskell
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: haskell
    steps:
      - uses: actions/checkout@v4

      - uses: haskell-actions/setup@v2
        id: setup
        with:
          ghc-version: "9.10.1"
          enable-stack: true
          stack-version: "3.3.1"

      - name: Restore cached dependencies
        uses: actions/cache/restore@v4
        id: cache
        with:
          path: |
            ~/.stack
            .stack-work
          key: ${{ runner.os }}-ghc-${{ steps.setup.outputs.ghc-version }}-stack-${{ hashFiles('haskell/stack.yaml', 'haskell/**/*.cabal') }}
          restore-keys: |
            ${{ runner.os }}-ghc-${{ steps.setup.outputs.ghc-version }}-

      - name: Install dependencies
        run: stack build --only-dependencies --fast

      - name: Run tests
        run: stack test --fast --no-terminal

      - name: Save cached dependencies
        uses: actions/cache/save@v4
        if: steps.cache.outputs.cache-hit != 'true'
        with:
          path: |
            ~/.stack
            .stack-work
          key: ${{ steps.cache.outputs.cache-primary-key }}
